
import requests
import time

def make_request(url, headers=None):
    if headers is None:
        headers = {"User-Agent": "AdvancedScanner/1.0"}
    try:
        return requests.get(url, headers=headers, timeout=5)
    except requests.RequestException:
        return None

def test_sql_payloads(target, log):
    try:
        with open("payloads/sql_payloads.txt") as f:
            payloads = f.read().splitlines()
        for payload in payloads:
            url = f"{target}?id={payload}"
            response = make_request(url)
            if response and any(err in response.text.lower() for err in ["sql", "syntax", "warning", "mysql", "error"]):
                log(f"[!] SQLi Possible → Payload: {payload}")
    except Exception as e:
        log(f"[-] SQLi test error: {e}")

def test_xss_payloads(target, log):
    try:
        with open("payloads/xss_payloads.txt") as f:
            payloads = f.read().splitlines()
        for payload in payloads:
            url = f"{target}?q={payload}"
            response = make_request(url)
            if response and payload.strip() in response.text:
                log(f"[!] XSS Possible → Payload reflected: {payload}")
    except Exception as e:
        log(f"[-] XSS test error: {e}")

def detect_hash_type_and_guess(log):
    try:
        with open("payloads/hash_samples.txt") as f:
            hashes = f.read().splitlines()
        for h in hashes:
            if len(h) == 32:
                log(f"[+] {h} → Possible MD5")
            elif len(h) == 40:
                log(f"[+] {h} → Possible SHA1")
            elif len(h) == 64:
                log(f"[+] {h} → Possible SHA256")
            elif h.startswith("$2y$"):
                log(f"[+] {h[:20]}... → Possible bcrypt")
            elif "argon2" in h:
                log(f"[+] {h[:20]}... → Possible Argon2")
            else:
                log(f"[?] {h[:20]}... → Unknown hash type")
    except Exception as e:
        log(f"[-] Hash analysis error: {e}")

def run_tests():
    def log(msg): print(msg)
    target = input("Target URL (e.g. http://example.com): ").strip()
    test_sql_payloads(target, log)
    test_xss_payloads(target, log)
    detect_hash_type_and_guess(log)

if __name__ == "__main__":
    run_tests()
